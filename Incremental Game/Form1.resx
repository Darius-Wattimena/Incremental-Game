<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>